// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NYourCodeAsCrimeScene.Infrastructure.Data;

namespace NYourCodeAsCrimeScene.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.GitCommit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CommitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("GitCommit");
                });

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.GitFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GitCommitId")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GitCommitId");

                    b.HasIndex("Name", "GitCommitId")
                        .IsUnique();

                    b.ToTable("GitFile");
                });

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.GitFileEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FileLength")
                        .HasColumnType("int");

                    b.Property<int?>("GitFileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GitFileId");

                    b.ToTable("GitFileEntry");
                });

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.GitCommit", b =>
                {
                    b.HasOne("NYourCodeAsCrimeScene.Core.Entities.Project", "Project")
                        .WithMany("Commits")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.GitFile", b =>
                {
                    b.HasOne("NYourCodeAsCrimeScene.Core.Entities.GitCommit", "GitCommit")
                        .WithMany("GitFiles")
                        .HasForeignKey("GitCommitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GitCommit");
                });

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.GitFileEntry", b =>
                {
                    b.HasOne("NYourCodeAsCrimeScene.Core.Entities.GitFile", "GitFile")
                        .WithMany("GitFileEntries")
                        .HasForeignKey("GitFileId");

                    b.Navigation("GitFile");
                });

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.GitCommit", b =>
                {
                    b.Navigation("GitFiles");
                });

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.GitFile", b =>
                {
                    b.Navigation("GitFileEntries");
                });

            modelBuilder.Entity("NYourCodeAsCrimeScene.Core.Entities.Project", b =>
                {
                    b.Navigation("Commits");
                });
#pragma warning restore 612, 618
        }
    }
}
